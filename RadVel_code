{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e3c1364a",
   "metadata": {},
   "source": [
    "## Import the necessary packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "aa2a8b15",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from astropy.timeseries import LombScargle"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6301b45",
   "metadata": {},
   "source": [
    "## Load the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "30805dab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-2450460.4887690004, -2450460.353689, -2450460.202629, -2450459.535469, -2450459.429769, -2450459.261649, -2450458.554889, -2450458.3781290003, -2450458.255429, -2450457.557389, -2450457.2369790003, -2450451.5181190004, -2450451.3246190003, -2450450.5269190003, -2450450.296019, -2450449.538219, -2450449.332919, -2450448.519619, -2450448.4395190002, -2450448.3463190002, -2450448.258119, -2450447.536319, -2450447.415719, -2450447.297019, -2450446.5475190002, -2450446.403219, -2450446.3150190003, -2450445.428319, -2450445.318219, -2450444.546319, -2450444.397619, -2450444.3084190004, -2450443.5406190003, -2450443.4299190002, -2450443.315119, -2450442.548719, -2450442.422319, -2450442.3081190004, -2450441.547319, -2450441.500419, -2450441.456119, -2450439.563819, -2450439.5176190003, -2450439.472019, -2450439.436619, -2450438.5233190004, -2450438.436319, -2450438.345019, -2450437.5398190003, -2450437.4479190004, -2450437.400919, -2450436.544819, -2450436.511619, -2450436.460419, -2450436.425819, -2450435.515019, -2450435.473119, -2450435.4225190002, -2450435.390319, -2450434.556319, -2450434.506819, -2450434.460519, -2450434.417419, -2450434.382519, -2450433.553119, -2450433.462319, -2450433.4156190003, -2450432.5620190003, -2450432.5170190004, -2450432.469419, -2450432.4222190003, -2450432.3290190003, -2450431.500519, -2450431.457219, -2450431.413219, -2450430.5579190003, -2450430.514519, -2450430.468119, -2450429.5551190004, -2450429.509719, -2450429.464219, -2450429.4293190003, -2450427.565419, -2450422.4131190004, -2450421.5579190003, -2450421.469219, -2450421.4236190002, -2450419.518219, -2450418.5126190004, -2450417.555919, -2450416.484519, -2450416.439419, -2450404.578119, -2450394.4798190002, -2450390.5162190003, -2450389.491119, -2450376.432819, -2450375.573619, -2450374.5513190003, -2450373.477719, -2450372.501219, -2450371.548719, -2450281.136419, -2450247.181419, -2450230.193419, -2450227.2084190003, -2450200.1714190003, -2450174.229419, -2450164.239419, -2450158.273419, -2450136.266419], [-40.87, -46.96, -47.39, -19.85, -13.47, -5.782, 49.41, 58.66, 63.2, 45.6, 17.88, -45.5, -38.98, 27.27, 32.45, 63.38, 54.78, -1.34, -5.477, -10.73, -26.29, -50.68, -45.78, -57.54, 10.56, 12.91, 16.4, 63.64, 60.48, 26.29, 5.988, -7.798, -43.62, -59.45, -58.6, -20.22, -8.064, 5.596, 56.41, 59.26, 66.78, -35.13, -37.3, -31.35, -42.57, -33.47, -27.46, -22.7, 45.34, 47.61, 56.15, 65.32, 69.63, 62.54, 50.86, -22.66, -22.55, -31.82, -31.72, -44.12, -33.59, -37.1, -39.13, -35.32, 25.09, 35.69, 41.17, 61.33, 58.98, 63.07, 56.86, 50.98, -2.545, 0.7633, -4.599, -38.53, -48.68, -38.84, 2.696, 11.46, 14.02, 17.55, 19.74, -41.45, -21.47, -20.37, -21.67, 49.31, -35.66, -38.28, 34.98, 37.54, -24.0, 73.89, 58.57, 13.45, -21.9, -47.91, -1.292, 60.15, 10.59, -49.72, 22.41, 41.06, 42.39, -40.99, 61.66, 47.51, -40.99, 45.03, 53.51], [3.3, 3.6, 4.5, 2.9, 2.6, 3.0, 2.2, 2.5, 3.2, 2.7, 3.3, 4.7, 4.9, 5.2, 6.5, 4.6, 6.2, 5.4, 5.5, 4.4, 7.3, 4.6, 4.6, 5.6, 5.0, 4.6, 6.6, 4.4, 6.0, 5.2, 5.4, 6.5, 4.7, 4.8, 4.7, 4.0, 4.0, 5.2, 4.5, 4.3, 6.4, 5.1, 4.4, 4.9, 7.5, 2.6, 3.0, 3.7, 4.6, 4.5, 4.7, 6.1, 6.1, 6.7, 7.7, 4.3, 6.3, 5.2, 6.5, 4.7, 4.8, 4.8, 4.6, 6.6, 4.3, 4.5, 4.3, 5.6, 7.5, 6.1, 5.0, 5.3, 5.0, 5.7, 5.9, 4.3, 4.3, 4.7, 4.4, 4.6, 4.6, 7.5, 2.4, 9.3, 5.1, 4.7, 5.2, 4.6, 4.4, 4.8, 6.1, 4.9, 4.4, 5.9, 4.5, 7.0, 6.6, 6.1, 4.6, 4.6, 5.3, 4.9, 6.7, 5.8, 7.2, 6.0, 4.2, 4.5, 4.6, 4.4, 4.4]]\n"
     ]
    }
   ],
   "source": [
    "# Load observational data (time, radial velocity, errors)\n",
    "file_path = '/Users/nishron/Documents/Exoplanet Detection - RadVel/Data/RV_51Pegasi_Data.txt'\n",
    "with open(file_path,'r') as file:\n",
    "    lines = file.readlines()\n",
    "    obs_t=[]\n",
    "    obs_v=[]\n",
    "    obs_verr=[]\n",
    "    result=[obs_t,obs_v,obs_verr]\n",
    "    for y in [0,1,2]:\n",
    "        for x in lines:\n",
    "            str = x.split('\\t')[y]\n",
    "            if str[-1]=='\\n':\n",
    "                str = str[:-1]\n",
    "            result[y].append(str)\n",
    "    file.close()\n",
    "    obs_t.pop(0)\n",
    "    obs_v.pop(0)\n",
    "    obs_verr.pop(0)\n",
    "    coln = []\n",
    "    for z in obs_t:\n",
    "        h = float(z) - 2450463.162419\n",
    "        coln.append(h)\n",
    "    obs_t=coln\n",
    "    result[0]=obs_t\n",
    "    for y in [0,1,2]:\n",
    "        for x in range (0,len(result[y])):\n",
    "            result[y][x]=float(result[y][x])\n",
    "\n",
    "            \n",
    "time = result[0]\n",
    "radial_velocity = result[1]\n",
    "errors = result[2]\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b6e01ab",
   "metadata": {},
   "source": [
    "## Define the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b3452162",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the model function for radial velocity\n",
    "def model_radial_velocity(t, k, w, e, T0):\n",
    "    theta = 2 * np.pi * (t - T0) / period\n",
    "    return k * (np.cos(theta + w) + e * np.cos(w))\n",
    "\n",
    "# Define a function to compute the true anomaly from mean anomaly\n",
    "def true_anomaly(M, e):\n",
    "    # Initial guess for E\n",
    "    E = M\n",
    "    \n",
    "    # Iteratively solve Kepler's equation for E\n",
    "    while True:\n",
    "        E_new = M + e * np.sin(E)\n",
    "        if np.abs(E_new - E) < 1e-6:\n",
    "            break\n",
    "        E = E_new\n",
    "    \n",
    "    # Compute the true anomaly from E\n",
    "    f = 2 * np.arctan(np.sqrt((1 + e) / (1 - e)) * np.tan(E / 2))\n",
    "    return f\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3675b66d",
   "metadata": {},
   "source": [
    "## Phase folding the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cd997a51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Perform Lomb-Scargle periodogram analysis\n",
    "frequency, power = LombScargle(time, radial_velocity, errors).autopower()\n",
    "period = 1 / frequency[np.argmax(power)]\n",
    "\n",
    "# Plot the periodogram\n",
    "plt.plot(1/frequency, power)\n",
    "plt.xlabel('Period')\n",
    "plt.ylabel('Lomb-Scargle Power')\n",
    "plt.title('Lomb-Scargle Periodogram')\n",
    "plt.show()\n",
    "\n",
    "# Folding the time series\n",
    "folded_time = time % period\n",
    "sort_index = np.argsort(folded_time)\n",
    "folded_time = folded_time[sort_index]\n",
    "radial_velocity = np.array(radial_velocity)\n",
    "radial_velocity = radial_velocity[sort_index]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48bbe7e0",
   "metadata": {},
   "source": [
    "## Parameter Estimation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "cf3cba54",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Estimated Semi-Amplitude (k): 56.18389075665685\n",
      "Estimated Argument of Periastron (w): 0.8134875692024001\n",
      "Estimated Eccentricity (e): 0.1846419987782849\n",
      "Estimated Time of Periastron Passage (T0): -0.23853349488286563\n",
      "Estimated Orbital Period: 4.227149282925734\n"
     ]
    }
   ],
   "source": [
    "# Initial guess for parameters [k, w, e, T0]\n",
    "initial = [20.0, np.pi / 4.0, 0.1, 0.0]\n",
    "\n",
    "# Bounds for parameter fitting [lower_bounds, upper_bounds]\n",
    "bds = ([0, -np.pi, 0, -np.inf], [np.inf, np.pi, 1, np.inf])\n",
    "\n",
    "# Perform curve fitting to estimate parameters\n",
    "params, cov = curve_fit(model_radial_velocity, folded_time, radial_velocity, sigma=errors, p0=initial, bounds=bds)\n",
    "\n",
    "# Extract estimated parameters\n",
    "est_k, est_w, est_e, est_T0 = params\n",
    "\n",
    "\n",
    "\n",
    "# Plot the folded data and fitted model\n",
    "plt.errorbar(folded_time, radial_velocity, yerr=errors, fmt='o', label='Data')\n",
    "plt.plot(folded_time, model_radial_velocity(folded_time, *params), label='Fitted Model')\n",
    "plt.xlabel('Folded Time')\n",
    "plt.ylabel('Radial Velocity')\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n",
    "# Display estimated parameters\n",
    "print(\"Estimated Semi-Amplitude (k):\", est_k)\n",
    "print(\"Estimated Argument of Periastron (w):\", est_w)\n",
    "print(\"Estimated Eccentricity (e):\", est_e)\n",
    "print(\"Estimated Time of Periastron Passage (T0):\", est_T0)\n",
    "print(\"Estimated Orbital Period:\", period)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "99cd912d",
   "metadata": {},
   "source": [
    "## Mass of the exoplanet"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10cdf9e7",
   "metadata": {},
   "source": [
    "We can't directly calculate the mass of the exoplanet, but it's maximum mass which is given by the equation: $$m_p= \\left(\\frac{PM_*^2}{2 \\pi G}\\right)^{1/3}k_*\\sqrt{1-e^2}$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7feb4b6a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The maximum mass of the exoplanet is 0.471 jupiter masses\n"
     ]
    }
   ],
   "source": [
    "Sm = 1.98892*10**30\n",
    "Da = 86400\n",
    "Ju = 1.899 * 10**27\n",
    "\n",
    "def mass_exoplanet(p,k,e,M):\n",
    "    y = (p*M**2/(2*np.pi*6.674*10**(-11)))**(1/3)*k*np.sqrt(1-e**2)\n",
    "    y = y/Ju\n",
    "    return y\n",
    "\n",
    "#51Pegasi is 1.11 times the mass of our sun\n",
    "maximum_mass = mass_exoplanet(period*Da,est_k,est_e,1.11*Sm)\n",
    "\n",
    "print(f'The maximum mass of the exoplanet is {round(maximum_mass,3)} jupiter masses')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
